{"version":3,"sources":["AdvancedSearchForm.js","LogsTable.js","App.js","serviceWorker.js","index.js"],"names":["AdvancedSearchForm","props","state","expand","searchSql","project","env","module","category","sub_category","logLevel","filter1","filter2","ip","beginTime","endTime","projectList","envList","ipList","moduleList","categoryOptions","endOpen","handleSearch","e","preventDefault","reprot","handleReset","resetData","toggle","setState","disabledStartDate","endtime","valueOf","disabledEndDate","onStartChange","value","console","log","Date","onEndChange","handleStartOpenChange","open","handleEndOpenChange","onChange","es_index","this","begin","getFullYear","getMonth","ss","String","length","getDate","dd","getES_index","reqwest","url","method","data","JSON","stringify","type","contentType","then","aggregations","group_by_project","buckets","map","m","key","getenv","getIp","getModule","message","warning","catch","error","selectedOptions","targetOption","loading","req","label","children","isLeaf","Option","push","span","Item","showSearch","style","width","placeholder","optionFilterProp","v","changeFiled","allowClear","className","disabledDate","showTime","format","onOpenChange","a","onChangeModule","options","loadData","getCategory","bind","onCategoryChange","changeOnSelect","defaultValue","display","mode","name","inputChange","filed","event","target","getFirstCategory","initProject","onSubmit","labelCol","gutter","getFields","textAlign","htmlType","marginLeft","onClick","fontSize","Component","LogsTable","handleCancel","visible","handleTableChange","pagination","filters","sorter","pager","current","getData","dataSource","detailInfo","currentPage","range","undefined","addtime","gte","lte","term","forEach","element","query","bool","filter","hits","total","title","dataIndex","render","text","record","openrDetail","slice","_source","fmt","date","ret","opt","toString","getHours","getMinutes","getSeconds","k","RegExp","exec","replace","padStart","dateFormat","tag","color","bordered","msg","extra","columns","bookTitle","rowKey","_id","onCancel","footer","bindDetail","WrappedAdvancedSearchForm","create","App","searchKey","n","onSearchChange","Math","ceil","random","Boolean","window","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.df67f0a8.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { Form, Row, Col, Input, Button, Icon, message, Select, Cascader } from 'antd';\nimport './AdvancedSearchForm.css';\nimport reqwest from 'reqwest';\nimport { DatePicker } from 'antd';\n\nclass AdvancedSearchForm extends Component {\n    constructor(props) {\n        super(props);\n        this.reprot = props.onChange\n    }\n    state = {\n        expand: false,\n        searchSql: {\n            project: \"\",\n            env: \"\",\n            module: \"\",\n            category: \"\",\n            sub_category: \"\",\n            logLevel: \"\",\n            filter1: \"\",\n            filter2: \"\",\n            ip: \"\",\n            beginTime: null,\n            endTime: null,\n        },\n        projectList: [],\n        envList: [],\n        ipList: [],\n        moduleList: [],\n        categoryOptions: [\n        ],\n        endOpen: false\n    };\n\n    getES_index() {\n        let es_index = \"aiologs\"  //定位es的索引\n        if (this.state.searchSql.beginTime && this.state.searchSql.endTime) {\n            // 如果选择了时间，则根据时间定位默认查询一个月内的数据\n            const begin = new Date(this.state.searchSql.beginTime)\n            const endTime = new Date(this.state.searchSql.endTime)\n            if (begin.getFullYear() === endTime.getFullYear()) {\n                es_index += `-${begin.getFullYear()}.`\n                if (begin.getMonth() === endTime.getMonth()) {\n                    const ss = String(begin.getMonth() + 1)\n                    es_index += `${ss.length > 1 ? ss : (\"0\" + ss)}.`\n                    if (begin.getDate() === endTime.getDate()) {\n                        const dd = String(begin.getDate())\n                        es_index += `${dd.length > 1 ? dd : (\"0\" + dd)}`\n                    }\n                    else {\n                        es_index += '*'\n                    }\n                } else {\n                    es_index += '*'\n                }\n            } else {\n                es_index += '*'\n            }\n        }\n        else if (this.state.searchSql.beginTime) {\n            const begin = new Date(this.state.searchSql.beginTime)\n            const ss = String(begin.getMonth() + 1)\n            const dd = String(begin.getDate())\n            es_index += `-${begin.getFullYear()}.${ss.length > 1 ? ss : (\"0\" + ss)}.${dd.length > 1 ? dd : (\"0\" + dd)}`\n        }\n        else if (this.state.searchSql.endTime) {\n            const endTime = new Date(this.state.searchSql.endTime)\n            const ss = String(endTime.getMonth() + 1)\n            const dd = String(endTime.getDate())\n            es_index += `-${this.state.endTime.getFullYear()}.${ss.length > 1 ? ss : (\"0\" + ss)}.${dd.length > 1 ? dd : (\"0\" + dd)}`\n        }\n        else {\n            es_index += '*'\n        }\n        return es_index\n    }\n\n    initProject() {\n        const req = {\n            \"size\": 0,\n            \"aggs\": {\n                \"group_by_project\": {\n                    \"terms\": {\n                        \"field\": \"project\"\n                    }\n                }\n            }\n        }\n        let es_index = this.getES_index()  //定位es的索引\n        reqwest({\n            url: `/${es_index}/_search/`,\n            method: 'post',\n            data: JSON.stringify(req),\n            type: 'json',\n            contentType: 'application/json'\n        }).then(data => {\n            if (data.aggregations) {\n                if (data.aggregations.group_by_project) {\n                    if (data.aggregations.group_by_project.buckets && data.aggregations.group_by_project.buckets.length > 0) {\n                        let projectList = data.aggregations.group_by_project.buckets.map(m => ({ \"key\": m.key }))\n                        this.setState({\n                            projectList\n                        })\n                        this.getenv(es_index);\n                        this.getIp(es_index);\n                        this.getModule(es_index);\n                        return\n                    }\n                }\n            }\n            message.warning('没有查到项目数据');\n        }).catch(() => {\n            this.setState({\n                projectList:[]\n            })\n            message.error('接口跪了~~~~(>_<)~~~~');\n        });\n    }\n\n    getenv(es_index) {\n        const req = {\n            \"size\": 0,\n            \"aggs\": {\n                \"group_by_project\": {\n                    \"terms\": {\n                        \"field\": \"env\"\n                    }\n                }\n            }\n        }\n        reqwest({\n            url: `/${es_index}/_search/`,\n            method: 'post',\n            data: JSON.stringify(req),\n            type: 'json',\n            contentType: 'application/json'\n        }).then(data => {\n            if (data.aggregations) {\n                if (data.aggregations.group_by_project) {\n                    if (data.aggregations.group_by_project.buckets && data.aggregations.group_by_project.buckets.length > 0) {\n                        let envList = data.aggregations.group_by_project.buckets.map(m => ({ \"key\": m.key }))\n                        this.setState({\n                            envList\n                        })\n                        return\n                    }\n                }\n            }\n            message.warning('没有查到环境数据');\n        }).catch(() => {\n            message.error('接口跪了~~~~(>_<)~~~~');\n        });\n    }\n\n    getIp(es_index) {\n        const req = {\n            \"size\": 0,\n            \"aggs\": {\n                \"group_by_project\": {\n                    \"terms\": {\n                        \"field\": \"ip\"\n                    }\n                }\n            }\n        }\n        reqwest({\n            url: `/${es_index}/_search/`,\n            method: 'post',\n            data: JSON.stringify(req),\n            type: 'json',\n            contentType: 'application/json'\n        }).then(data => {\n            if (data.aggregations) {\n                if (data.aggregations.group_by_project) {\n                    if (data.aggregations.group_by_project.buckets && data.aggregations.group_by_project.buckets.length > 0) {\n                        let ipList = data.aggregations.group_by_project.buckets.map(m => ({ \"key\": m.key }))\n                        this.setState({\n                            ipList\n                        })\n                        return\n                    }\n                }\n            }\n            message.warning('没有查到环境数据');\n        }).catch(() => {\n            message.error('接口跪了~~~~(>_<)~~~~');\n        });\n    }\n\n    getModule(es_index) {\n        const req = {\n            \"size\": 0,\n            \"aggs\": {\n                \"group_by_project\": {\n                    \"terms\": {\n                        \"field\": \"module\"\n                    }\n                }\n            }\n        }\n        reqwest({\n            url: `/${es_index}/_search/`,\n            method: 'post',\n            data: JSON.stringify(req),\n            type: 'json',\n            contentType: 'application/json'\n        }).then(data => {\n            if (data.aggregations) {\n                if (data.aggregations.group_by_project) {\n                    if (data.aggregations.group_by_project.buckets && data.aggregations.group_by_project.buckets.length > 0) {\n                        let moduleList = data.aggregations.group_by_project.buckets.map(m => ({ \"key\": m.key }))\n                        this.setState({\n                            moduleList\n                        })\n                        return\n                    }\n                }\n            }\n            message.warning('没有查到环境数据');\n        }).catch(() => {\n            message.error('接口跪了~~~~(>_<)~~~~');\n        });\n    }\n\n    getCategory(selectedOptions) {\n        const targetOption = selectedOptions[selectedOptions.length - 1];\n        targetOption.loading = true;\n        const req = {\n            \"size\": 0,\n            \"aggs\": {\n                \"group_by_project\": {\n                    \"terms\": {\n                        \"field\": \"sub_category\"\n                    }\n                }\n            },\n            \"query\": {\n                \"bool\": {\n                    \"filter\": {\n                        \"term\": { \"category\": targetOption.label }\n                    }\n                }\n            }\n        }\n\n        let es_index = this.getES_index()  //定位es的索引\n        reqwest({\n            url: `/${es_index}/_search/`,\n            method: 'post',\n            data: JSON.stringify(req),\n            type: 'json',\n            contentType: 'application/json'\n        }).then(data => {\n            if (data.aggregations) {\n                if (data.aggregations.group_by_project) {\n                    if (data.aggregations.group_by_project.buckets && data.aggregations.group_by_project.buckets.length > 0) {\n                        targetOption.loading = false;\n                        targetOption.children = data.aggregations.group_by_project.buckets.map(m => ({\n                            value: m.key,\n                            label: m.key\n                        }))\n\n                        this.setState({\n                            categoryOptions: [...this.state.categoryOptions]\n                        })\n                        return\n                    }\n                }\n            }\n            message.warning('没有查到环境数据');\n        }).catch(() => {\n            message.error('接口跪了~~~~(>_<)~~~~');\n        });\n    }\n\n    getFirstCategory(value) {\n        const req = {\n            \"size\": 0,\n            \"aggs\": {\n                \"group_by_project\": {\n                    \"terms\": {\n                        \"field\": \"category\"\n                    }\n                }\n            },\n            \"query\": {\n                \"bool\": {\n                    \"filter\": {\n                        \"term\": { \"module\": value }\n                    }\n                }\n            }\n        }\n\n        let es_index = this.getES_index()  //定位es的索引\n        reqwest({\n            url: `/${es_index}/_search/`,\n            method: 'post',\n            data: JSON.stringify(req),\n            type: 'json',\n            contentType: 'application/json'\n        }).then(data => {\n            if (data.aggregations) {\n                if (data.aggregations.group_by_project) {\n                    if (data.aggregations.group_by_project.buckets && data.aggregations.group_by_project.buckets.length > 0) {\n                        let categoryOptions = data.aggregations.group_by_project.buckets.map(m => ({\n                            value: m.key,\n                            label: m.key,\n                            isLeaf: false,\n                        }))\n                        this.setState({\n                            categoryOptions\n                        })\n                        return\n                    }\n                }\n            }\n            message.warning('没有查到环境数据');\n        }).catch(() => {\n            message.error('接口跪了~~~~(>_<)~~~~');\n        });\n    }\n\n    // To generate mock Form.Item\n    getFields() {\n        const expand = this.state.expand;\n        const { Option } = Select;\n        // const { getFieldDecorator } = this.props.form;\n        const { endOpen, projectList, envList, ipList, moduleList } = this.state;\n        const { beginTime, endTime } = this.state.searchSql;\n        const children = [];\n        children.push(\n            <Col span={8} key={1} >\n                <Form.Item label={'项目标识'}>\n                    <Select\n                        showSearch\n                        style={{ width: \"100%\" }}\n                        placeholder=\"选择一个项目\"\n                        optionFilterProp=\"children\"\n                        onChange={v => this.changeFiled(v, 'project')}\n                        allowClear\n                    >\n                        {projectList ? projectList.map(m => (\n                            <Option value={m.key} key={m.key}>{m.key}</Option>\n                        )) : []}\n                    </Select>\n                </Form.Item>\n            </Col>,\n        );\n        children.push(\n            <Col span={8} key={7} >\n                <Form.Item label={'时间'}>\n                    <div>\n                        <DatePicker className=\"datetime-pickup-size\"\n                            disabledDate={this.disabledStartDate}\n                            showTime\n                            format=\"YYYY-MM-DD HH:mm:ss\"\n                            value={beginTime}\n                            placeholder=\"开始时间\"\n                            onChange={this.onStartChange}\n                            onOpenChange={this.handleStartOpenChange}\n                            allowClear\n                        />\n                        <DatePicker\n                            className=\"datetime-pickup-size\"\n                            disabledDate={this.disabledEndDate}\n                            showTime\n                            format=\"YYYY-MM-DD HH:mm:ss\"\n                            value={endTime}\n                            placeholder=\"结束时间\"\n                            onChange={this.onEndChange}\n                            open={endOpen}\n                            onOpenChange={this.handleEndOpenChange}\n                            allowClear\n                        />\n                    </div>\n                </Form.Item>\n            </Col>,\n        );\n        children.push(\n            <Col span={8} key={3}>\n                <Form.Item label={'错误类型'}>\n                    <Select style={{ width: \"100%\" }} onChange={(a) => this.changeFiled(a, \"logLevel\")} placeholder=\"可选\" allowClear>\n                        <Option value=\"INFO\" >INFO</Option>\n                        <Option value=\"WARNING\" >WARNING</Option>\n                        <Option value=\"ERROR\" >ERROR</Option>\n                        <Option value=\"CRITICAL\" >CRITICAL</Option>\n                        <Option value=\"DEBUG\">DEBUG</Option>\n                    </Select>\n                </Form.Item>\n            </Col>,\n        );\n        children.push(\n            <Col span={8} key={4}>\n                <Form.Item label={'模块'}>\n                    <Select style={{ width: \"100%\" }} onChange={(a) => this.onChangeModule(a)} placeholder=\"可选\" allowClear>\n                        {moduleList ? moduleList.map(m => (\n                            <Option value={m.key} key={m.key}>{m.key}</Option>\n                        )) : []}\n                    </Select>\n                </Form.Item>\n            </Col>,\n        );\n        children.push(\n            <Col span={8} key={5}>\n                <Form.Item label={'分类'}>\n                    <Cascader\n                        options={this.state.categoryOptions}\n                        loadData={this.getCategory.bind(this)}\n                        onChange={this.onCategoryChange.bind(this)}\n                        changeOnSelect\n                        placeholder=\"可选\"\n                    />\n                </Form.Item>\n            </Col>,\n        );\n        children.push(\n            <Col span={8} key={2}>\n                <Form.Item label={'环境'}>\n                    <Select defaultValue=\"product\" style={{ width: \"100%\" }} onChange={(a) => this.changeFiled(a, \"env\")} placeholder=\"可选\" allowClear>\n                        {envList ? envList.map(m => (\n                            <Option value={m.key} key={m.key}>{m.key}</Option>\n                        )) : []}\n                    </Select>\n                </Form.Item>\n            </Col>,\n        );\n        children.push(\n            <Col span={8} key={8} style={{ display: expand ? 'block' : 'none' }}>\n                <Form.Item label={'ip'} >\n                    <Select mode=\"multiple\" style={{ width: \"100%\" }} onChange={(a) => this.changeFiled(a, \"env\")} placeholder=\"可选\" allowClear>\n                        {ipList ? ipList.map(m => (\n                            <Option value={m.key} key={m.key}>{m.key}</Option>\n                        )) : []}\n                    </Select>\n                </Form.Item>\n            </Col>,\n        );\n        children.push(\n            <Col span={8} key={9} style={{ display: expand ? 'block' : 'none' }}>\n                <Form.Item label={'过滤条件1'}>\n                    <Input placeholder=\"可填\" name=\"filter1\" onChange={this.inputChange.bind(this)} allowClear />\n                </Form.Item>\n            </Col>,\n        );\n        children.push(\n            <Col span={8} key={10} style={{ display: expand ? 'block' : 'none' }}>\n                <Form.Item label={'过滤条件2'}>\n                    <Input placeholder=\"可填\" name=\"filter2\" onChange={this.inputChange.bind(this)} allowClear />\n                </Form.Item>\n            </Col>,\n        );\n        // for (let i = 0; i < 10; i++) {\n        //     children.push(\n        //         <Col span={8} key={i} style={{ display: i < count ? 'block' : 'none' }}>\n        //             <Form.Item label={`Field ${i}`}>\n        //                 {getFieldDecorator(`field-${i}`, {\n        //                     rules: [\n        //                         {\n        //                             required: true,\n        //                             message: 'Input something!',\n        //                         },\n        //                     ],\n        //                 })(<Input placeholder=\"placeholder\" />)}\n        //             </Form.Item>\n        //         </Col>,\n        //     );\n        // }\n        return children;\n    }\n\n    changeFiled(value, filed) {\n        const searchSql = { ...this.state.searchSql }\n        searchSql[filed] = value\n        this.setState({\n            searchSql\n        })\n    }\n\n    inputChange(event) {\n        const target = event.target;\n        const name = target.name;\n        this.changeFiled(target.value, name)\n    }\n\n    onChangeModule(value) {\n        this.changeFiled(value, \"module\");\n        if (value && value.length > 0) {\n            this.getFirstCategory(value);\n        }else{\n            this.setState({\n                categoryOptions:[]\n            })\n        }\n    }\n\n    onCategoryChange(value, selectedOptions) {\n        if (value.length===0){\n            this.changeFiled(\"\", \"category\");\n            this.changeFiled(\"\", \"sub_category\");\n        }\n        if (value.length === 1) {\n            this.changeFiled(value[0], \"category\");\n            this.changeFiled(\"\", \"sub_category\");\n        }\n        if (value.length > 1) {\n            this.changeFiled(value[0], \"category\");\n            this.changeFiled(value[1], \"sub_category\");\n        }\n    }\n\n    handleSearch = e => {\n        e.preventDefault();\n        this.reprot(this.state.searchSql)\n    };\n\n    handleReset = () => {\n        const resetData={\n            expand: this.state.expand,\n            searchSql: {\n                project: \"\",\n                env: \"\",\n                module: \"\",\n                category: \"\",\n                sub_category: \"\",\n                logLevel: \"\",\n                filter1: \"\",\n                filter2: \"\",\n                ip: \"\",\n                beginTime: null,\n                endTime: null,\n            },\n            projectList: [],\n            envList: [],\n            ipList: [],\n            moduleList: [],\n            categoryOptions: [\n            ],\n            endOpen: false\n        }\n        this.reprot(resetData,1)\n    };\n\n    toggle = () => {\n        const { expand } = this.state;\n        this.setState({ expand: !expand });\n    };\n\n    disabledStartDate = beginTime => {\n        const { endtime } = this.state.searchSql;\n        if (!beginTime || !endtime) {\n            return false;\n        }\n        return beginTime.valueOf() > endtime.valueOf();\n    };\n\n    disabledEndDate = endtime => {\n        const { beginTime } = this.state.searchSql;\n        if (!endtime || !beginTime) {\n            return false;\n        }\n        return endtime.valueOf() <= beginTime.valueOf();\n    };\n\n    onStartChange = value => {\n        const searchSql = { ...this.state.searchSql }\n        searchSql.beginTime = value\n        console.log(value)\n        console.log(new Date(value))\n        this.setState({\n            searchSql\n        });\n        // this.initProject()\n    };\n\n    onEndChange = value => {\n        const searchSql = { ...this.state.searchSql }\n        searchSql.endTime = value\n        this.setState({\n            searchSql\n        });\n        // this.initProject()\n    };\n\n    handleStartOpenChange = open => {\n        if (!open) {\n            this.setState({ endOpen: true });\n        }\n    };\n\n    handleEndOpenChange = open => {\n        this.setState({ endOpen: open });\n    };\n    componentDidMount() {\n        this.initProject();\n    };\n    render() {\n        return (\n            <Form className=\"ant-advanced-search-form\" onSubmit={this.handleSearch} labelCol={{ span: 3 }}>\n                <Row gutter={24}>{this.getFields()}</Row>\n                <Row>\n                    <Col span={24} style={{ textAlign: 'right' }}>\n                        <Button type=\"primary\" htmlType=\"submit\">\n                            查询\n                </Button>\n                        <Button style={{ marginLeft: 8 }} onClick={this.handleReset}>\n                            清除\n                </Button>\n                        <Button type=\"link\" style={{ marginLeft: 8, fontSize: 12 }} onClick={this.toggle}>\n                            折叠 <Icon type={this.state.expand ? 'up' : 'down'} />\n                        </Button>\n                    </Col>\n                </Row>\n            </Form>\n        )\n    }\n}\n\nexport default AdvancedSearchForm;","import React, { Component } from 'react';\nimport { Table, message, Tag, Modal, Descriptions,Button } from 'antd';\nimport reqwest from 'reqwest';\n// import './AdvancedSearchForm.css';\n\nfunction dateFormat(fmt, date) {\n    let ret;\n    let opt = {\n        \"Y+\": date.getFullYear().toString(),        // 年\n        \"m+\": (date.getMonth() + 1).toString(),     // 月\n        \"d+\": date.getDate().toString(),            // 日\n        \"H+\": date.getHours().toString(),           // 时\n        \"M+\": date.getMinutes().toString(),         // 分\n        \"S+\": date.getSeconds().toString()          // 秒\n        // 有其他格式化字符需求可以继续添加，必须转化成字符串\n    };\n    for (let k in opt) {\n        ret = new RegExp(\"(\" + k + \")\").exec(fmt);\n        if (ret) {\n            fmt = fmt.replace(ret[1], (ret[1].length === 1) ? (opt[k]) : (opt[k].padStart(ret[1].length, \"0\")))\n        };\n    };\n    return fmt;\n}\n\nclass LogsTable extends Component {\n    constructor(props) {\n        super(props);\n        // this.state =props.dataSource\n        this.state = {\n            ...props.dataSource,\n            pagination: {\n                \"current\": 1,\n                \"pageSize\": 10,\n                \"total\": 0\n            },\n            loading: false,\n            detailInfo: {},\n            visible: false,\n            dataSource:[]\n        }\n    };\n    // shouldComponentUpdate(nextProps, nextState) {\n    //     console.log(nextProps, nextState)\n    //     return nextState.someData !== this.state.someData\n    //   }\n    getData(currentPage) {\n        // if (!this.state.project) {\n        //     message.error('项目必须选择');\n        //     return\n        // }\n        this.setState({ loading: true })\n        let es_index = \"aiologs\"  //定位es的索引\n        if (this.state.beginTime && this.state.endTime) {\n            // 如果选择了时间，则根据时间定位默认查询一个月内的数据\n            const begin = new Date(this.state.beginTime)\n            const endTime = new Date(this.state.endTime)\n            if (begin.getFullYear() === endTime.getFullYear()) {\n                es_index += `-${begin.getFullYear()}.`\n                if (begin.getMonth() === endTime.getMonth()) {\n                    const ss = String(begin.getMonth() + 1)\n                    es_index += `${ss.length > 1 ? ss : (\"0\" + ss)}.`\n                    if (begin.getDate() === endTime.getDate()) {\n                        const dd = String(begin.getDate())\n                        es_index += `${dd.length > 1 ? dd : (\"0\" + dd)}`\n                    }\n                    else {\n                        es_index += '*'\n                    }\n                } else {\n                    es_index += '*'\n                }\n            } else {\n                es_index += '*'\n            }\n        }\n        else if (this.state.beginTime) {\n            const begin = new Date(this.state.beginTime)\n            const ss = String(begin.getMonth() + 1)\n            const dd = String(begin.getDate())\n            es_index += `-${begin.getFullYear()}.${ss.length > 1 ? ss : (\"0\" + ss)}.${dd.length > 1 ? dd : (\"0\" + dd)}`\n        }\n        else if (this.state.endTime) {\n            const endTime = new Date(this.state.endTime)\n            const ss = String(endTime.getMonth() + 1)\n            const dd = String(endTime.getDate())\n            es_index += `-${endTime.getFullYear()}.${ss.length > 1 ? ss : (\"0\" + ss)}.${dd.length > 1 ? dd : (\"0\" + dd)}`\n        }\n        else {\n            es_index += '*'\n        }\n        if (!currentPage) {\n            currentPage = 1\n        }\n        const req = {\n            \"size\": 10,\n            \"from\": (currentPage - 1) * 10,\n            \"sort\": [\n                {\n                    \"addtime\": {\n                        \"order\": \"desc\"\n                    },\n                    \"_id\": {\n                        \"order\": \"desc\"\n                    }\n                }\n            ]\n        }\n        //分页\n\n        // if (this.state.affterTime || this.state.es_id) {\n        //     req.search_after = []\n        //     if (this.state.affterTime) {\n        //         req.search_after.push(this.state.affterTime)\n        //     }\n        //     if (this.state.es_id) {\n        //         req.search_after.push(this.state.es_id)\n        //     }\n        // }\n        let range = undefined\n        // 时间范围减少\n        if (this.state.beginTime || this.state.endTime) {\n            range = { \"addtime\": {} }\n            if (this.state.beginTime) {\n                range.addtime.gte =this.state.beginTime.format('YYYY-MM-DDTHH:mm:ss')\n            }\n            if (this.state.endTime) {\n                range.addtime.lte =this.state.endTime.format('YYYY-MM-DDTHH:mm:ss')\n            }\n        }\n        // 项目\n        let term = []\n        if (this.state.project) {\n            term.push({\n                \"project\": this.state.project\n            })\n        }\n        if (this.state.env) {\n            term.push({\n                \"env\": this.state.env\n            })\n        }\n        if (this.state.module) {\n            term.push({\n                \"module\": this.state.module\n            })\n        }\n        if (this.state.category) {\n            term.push({\n                \"category\": this.state.category\n            })\n        }\n        if (this.state.sub_category) {\n            term.push({\n                \"sub_category\": this.state.sub_category\n            })\n        }\n        if (this.state.logLevel) {\n            term.push({\n                \"logLevel\": this.state.logLevel\n            })\n        }\n        if (this.state.filter1) {\n            term.push({\n                \"filter1\": this.state.filter1\n            })\n        }\n        if (this.state.filter2) {\n            term.push({\n                \"filter2\": this.state.filter2\n            })\n        }\n        if (this.state.ip&&this.state.ip.length>0) {\n            this.state.ip.forEach(element => term.push({\n                \"ip\": element\n            }));\n        }\n        if (term.length > 0 || range) {\n            req.query = { \"bool\": { \"filter\": [] } }\n            if (term.length === 1) {\n                req.query.bool.filter.push({ \"term\": term[0] })\n            }\n            else if (term.length > 0) {\n                term.forEach(m=>req.query.bool.filter.push({ \"term\": m }))\n            }\n            if (range) {\n                req.query.bool.filter.push({ \"range\": range })\n            }\n        }\n        reqwest({\n            url: `/${es_index}/_search/`,\n            method: 'post',\n            data: JSON.stringify(req),\n            type: 'json',\n            contentType: 'application/json'\n        }).then(data => {\n            if (data.hits) {\n                if (data.hits.hits && data.hits.hits.length > 0) {\n                    const pager = { ...this.state.pagination };\n                    pager.total = data.hits.total.value;\n                    this.setState({\n                        dataSource: data.hits.hits,\n                        pagination: pager,\n                        loading: false\n                    })\n                } else {\n                    message.warning('查询不到数据');\n                    this.setState({\n                        loading: false\n                    })\n                }\n            } else {\n                message.warning('查询不到数据');\n                this.setState({\n                    loading: false\n                })\n            }\n        }).catch(() => {\n            message.error('无数据~~~~(>_<)~~~~');\n            this.setState({\n                loading: false\n            })\n        });\n    };\n    bookTitle() {\n        return [\n            {\n                title: '项目标识',\n                dataIndex: '_source.project',\n                key: '_source.project',\n                width: \"8%\",\n                render: (text, record) => <Button type=\"link\" onClick={() => this.openrDetail(record)}>{text}</Button>,\n            },\n            {\n                title: '模块',\n                dataIndex: '_source.module',\n                key: '_source.module',\n                width: \"8%\",\n            },\n            {\n                title: '分类',\n                dataIndex: '_source.category',\n                key: '_source.category',\n                width: \"8%\",\n            },\n            {\n                title: '子分类',\n                dataIndex: '_source.sub_category',\n                key: '_source.sub_category',\n                width: \"8%\",\n            },\n            {\n                title: '日志内容',\n                dataIndex: '_source.msg',\n                key: '_source.msg',\n                render: m => typeof m == 'string' ? m : JSON.stringify(m).slice(0, 60)\n            },\n            {\n                title: '过滤',\n                dataIndex: '_source.filter1',\n                key: '_source.filter1',\n                width: \"10%\",\n                render: (filter1, record) =>\n                    (<div>\n                        <div>{filter1}</div>\n                        <div>{record._source.filter2}</div>\n                    </div>),\n            },\n            {\n                title: '时间',\n                dataIndex: '_source.addtime',\n                key: '_source.addtime',\n                width: \"10%\",\n                render: (addtime, record) =>\n                    (<div>{dateFormat(\"YYYY-mm-dd HH:MM:SS\", new Date(addtime))}</div>),\n            },\n            {\n                title: 'ip',\n                dataIndex: '_source.ip',\n                key: '_source.ip',\n                width: \"8%\",\n            },\n            {\n                title: '日志等级',\n                dataIndex: '_source.logLevel',\n                key: '_source.logLevel',\n                width: \"10%\",\n                render: (tag) => (\n                    <span>\n                        {(tag => {\n                            let color = 'green';\n                            switch (tag) {\n                                case \"INFO\":\n                                    color = 'blue'\n                                    break;\n                                case \"WARNING\":\n                                    color = 'orange'\n                                    break;\n                                case \"ERROR\":\n                                    color = 'red'\n                                    break;\n                                case \"CRITICAL\":\n                                    color = 'purple'\n                                    break;\n                                case \"DEBUG\":\n                                    color = 'gray'\n                                    break;\n                                default:\n                                    break;\n                            }\n                            return (\n                                <Tag color={color} key={tag}>\n                                    {tag}\n                                </Tag>\n                            );\n                        })(tag)}\n                    </span>\n                ),\n            },\n            {\n                title: '操作',\n                // key: 'logLevel',\n                width: \"10%\",\n                render: (text, record) => (\n                    <span>\n                        <Button type=\"link\" onClick={() => this.openrDetail(record)}>查看详情</Button>\n                    </span>\n                ),\n            },\n        ];\n    };\n    openrDetail(detailInfo) {\n        this.setState(\n            {\n                detailInfo: detailInfo,\n                visible: true\n            }\n        )\n    };\n    handleCancel = e => {\n        console.log(e);\n        this.setState({\n            visible: false,\n        });\n    };\n    handleTableChange = (pagination, filters, sorter) => {\n        console.log(pagination)\n        const pager = { ...this.state.pagination };\n        pager.current = pagination.current;\n        this.setState({\n            pagination: pager,\n        });\n        this.getData(pager.current);\n    };\n    bindDetail(detailInfo) {\n        if (!detailInfo || !detailInfo._source) {\n            return null\n        }\n        return (\n            <Descriptions title={null} bordered>\n                <Descriptions.Item label=\"项目标识\">{detailInfo._source.project}</Descriptions.Item>\n                <Descriptions.Item label=\"环境\">{detailInfo._source.env}</Descriptions.Item>\n                <Descriptions.Item label=\"日志等级\">{detailInfo._source.logLevel}</Descriptions.Item>\n                <Descriptions.Item label=\"模块\">{detailInfo._source.module}</Descriptions.Item>\n                <Descriptions.Item label=\"分类\">{detailInfo._source.category}</Descriptions.Item>\n                <Descriptions.Item label=\"子分类\">{detailInfo._source.sub_category}</Descriptions.Item>\n                <Descriptions.Item label=\"ip地址\">{detailInfo._source.ip}</Descriptions.Item>\n                <Descriptions.Item label=\"记录时间\" span={2}>{detailInfo._source.addtime}</Descriptions.Item>\n                <Descriptions.Item label=\"过滤条件1\">{detailInfo._source.filter1}</Descriptions.Item>\n                <Descriptions.Item label=\"过滤条件2\" span={2}>{detailInfo._source.filter2}</Descriptions.Item>\n                <Descriptions.Item label=\"日志内容\" span={3}>\n                    {typeof detailInfo._source.msg == 'string' ? detailInfo._source.msg : JSON.stringify(detailInfo._source.msg, null, 4)}\n                </Descriptions.Item>\n                <Descriptions.Item label=\"扩展信息\" span={3}>\n                    {typeof detailInfo._source.msg == 'string' ? detailInfo._source.extra : JSON.stringify(detailInfo._source.extra, null, 4)}\n                </Descriptions.Item>\n            </Descriptions>\n        )\n    }\n    componentDidMount() {\n        this.getData();\n    };\n    render() {\n        const dataSource = this.state.dataSource\n        const columns = this.bookTitle()\n        const bordered = true\n        const detailInfo = this.state.detailInfo\n        return (<div><Table columns={columns} dataSource={dataSource} bordered={bordered} rowKey={record => record._id}\n            pagination={this.state.pagination}\n            loading={this.state.loading}\n            onChange={this.handleTableChange} />\n            <Modal\n                title=\"日志详情\"\n                visible={this.state.visible}\n                onCancel={this.handleCancel}\n                footer={null}\n                width=\"60%\"\n            >\n                {this.bindDetail(detailInfo)}\n            </Modal></div>)\n    };\n}\nexport default LogsTable\n","import React, { Component } from 'react';\nimport { Form } from 'antd';\nimport AdvancedSearchForm from './AdvancedSearchForm'\nimport LogsTable from './LogsTable'\nimport './App.css';\n\n\nconst WrappedAdvancedSearchForm = Form.create({ name: 'advanced_search' })(AdvancedSearchForm);\nclass App extends Component {\n  state = {\n    searchSql: {\n      project: \"\",\n      env: \"\",\n      module: \"\",\n      category: \"\",\n      sub_category: \"\",\n      logLevel: \"\",\n      filter1: \"\",\n      filter2: \"\",\n      ip: \"\",\n      beginTime: null,\n      endTime: null,\n    },\n    searchKey:0\n  }\n  onSearchChange(v,n) {\n    let searchKey=this.state.searchKey\n    if(n){\n      searchKey++\n    }\n    this.setState({\n      searchSql: v,\n      searchKey\n    })\n  }\n  render() {\n    const {searchSql,searchKey} = this.state\n    return (\n      <div className=\"App\">\n        <WrappedAdvancedSearchForm onChange={(v,n) => this.onSearchChange(v,n)} key={searchKey} />\n        <div className=\"TableShow\" ><LogsTable dataSource={searchSql} key={Math.ceil(Math.random()*1000)}/></div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}